password <- "newuser"
db <- "posts"
collection="restaurants"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection=collection, db=db, url = url)
data1$count()
## Convert all data into a dataframe
m0 <- data1$find()
head(m0)
## Convert some query into a dataframe
m0b <- data1$find('{"borough" : "Manhattan", "cuisine" : "Indian" }')
head(m0b)
data1$index(add = "name")
m0c <- data1$find('{"borough" : "Manhattan", "cuisine" : "Indian" }',
sort='{"name":1}',
fields = '{"_id":0, "name":1, "borough":1, "cuisine":1}')
head(m0c)
# Cross-table: summing up counts
tbl1 <- data1$mapreduce(
map = "function(){emit({borough:this.borough, cuisine:this.cuisine}, 1)}",
reduce = "function(id, counts){return Array.sum(counts)}"
)
head(tbl1)
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection=posts, db=db, url = url)$find()
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection="posts", db=db, url = url)$find()
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
Q
shiny::runApp('Documents/shiny/AppRumen')
Q
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
Q
data1
data1$update('{postID: 1445138342}', update='{"$set"{ current_views: 6 }}' )
data1$update('{"postID": 1445138342}', update='{"$set"{ current_views: 6 }}' )
data1$update('{"postID": 1445138342}', update='{"$set":{ current_views: 6 }}' )
data1$find('{"postID": 1445138342}')
data1$find('{postID: 1445138342}')
data1$find('{"postID": "1445138342"}')
data1$find('{"postID":1445138342}')
data1$find()
data1 <- mongo(collection="posts", db=db, url = url)
data1$update('{"postID": 1445138342}', update='{"$set":{ current_views: 6 }}' )
data1$find('{"postID":1445138342}')
data1$update('{"postID":1445138342}', update='{"$set":{ current_views: 6 }}' )
data1$update('{"postID":1445138342}', update='{"$set":{ "current_views": 6 }}' )
data1$find('{"postID":1445138342}')
update_views <- paste0('{"$set":{ "current_views":', 1 + 1,
'"cumulative_views":', 2 + 1, '}}', sep='')
update_views
update_views <- paste0('\{"$set":{ "current_views":', 1 + 1,
'"cumulative_views":', 2 + 1, '}}', sep='')
update_views <- paste0('{"$set":{ "current_views":', 1 + 1,
'"cumulative_views":', 2 + 1, '}}')
update_views
update_views <- paste('{"$set":{ "current_views":', 1 + 1,
'"cumulative_views":', 2 + 1, '}}',sep="")
update_views
update_views <- paste('{"$set":{ "current_views":', 1 + 1,
'"cumulative_views":', 2 + 1, '}}',sep='')
update_views
update_views <- paste('{"$set":{', '"current_views":', 1 + 1,
'"cumulative_views":', 2 + 1, '}}',sep='')
update_views
update_views <- paste('{"$set":{', '"current_views":', 1 + 1,'}}', sep="")
update_views
paste('{"id":', '"', 5, '"', '}', sep="")
data1$update('{"postID":1445138342}', update_views)
data1$find('{"postID":1445138342}')
update_views <- paste('{"$set":{', '"current_views":', (4 + 1),'}}', sep="")
data1$update('{"postID":1445138342}', update=update_views)
data1$find('{"postID":1445138342}')
update_views <- paste('{"$set":{', '"current_views":', (4 + 3),'}}', sep="")
data1$update('{"postID":1445138342}', update=update_views)
data1$find('{"postID":1445138342}')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
post_data()
length(post_data())
mongo(collection="posts", db=db, url = url)$find()[1,]
length(mongo(collection="posts", db=db, url = url)$find()[1,])
mongo(collection="posts", db=db, url = url)$count()
library(mongolite)
host <- "ds039484.mongolab.com:39484"
username <- "newuser"
password <- "newuser"
db <- "posts"
collection="restaurants"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection=collection, db=db, url = url)
data1$count()
## Convert all data into a dataframe
m0 <- data1$find()
head(m0)
## Convert some query into a dataframe
m0b <- data1$find('{"borough" : "Manhattan", "cuisine" : "Indian" }')
head(m0b)
data1$index(add = "name")
m0c <- data1$find('{"borough" : "Manhattan", "cuisine" : "Indian" }',
sort='{"name":1}',
fields = '{"_id":0, "name":1, "borough":1, "cuisine":1}')
head(m0c)
m0b
head(m0b)
shiny::runApp('Documents/shiny/AppRumen')
mongo(collection = "posts", db = db, url = url)$find
mongo(collection = "posts", db = db, url = url)$find( ) %>% head()
data.frame(post_data())
post_data()
as.data.frame(post_data())
is.data.frame(post_data())
data.frame(matrix(post_data(), nrow=1))
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
view_posts
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
user_session$info$emailAddress
Q
c
shiny::runApp('Documents/shiny/AppRumen')
user_session
user_session$info
user_session$info$token_valid
user_session$info$emailAddress
rv$selectedPost$email_address
Q
"abc"==NULL
shiny::runApp('Documents/shiny/AppRumen')
view_posts
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection="posts", db=db, url = url)$find()
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection="posts", db=db, url = url)$find()
# Insert some data
data(flights, package = "nycflights13")
m <- mongo(collection = "nycflights")
m$insert(flights)
library(jsonlite)
# Insert some data
data(flights, package = "nycflights13")
m <- mongo(collection = "nycflights")
m$insert(flights)
library(mongolite)
# Insert some data
data(flights, package = "nycflights13")
m <- mongo(collection = "nycflights")
m$insert(flights)
##-----------------------
library(mongolite)
m <- mongo(collection = "diamonds")
# Insert test data
data(diamonds, package="ggplot2")
m$insert(diamonds)
# Check records
m$count()
nrow(diamonds)
# Perform a query and retrieve data
out <- m$find('{"cut" : "Premium", "price" : { "$lt" : 1000 } }')
# Compare
nrow(out)
nrow(subset(diamonds, cut == "Premium" & price < 1000))
# Cross-table
tbl <- m$mapreduce(
map = "function(){emit({cut:this.cut, color:this.color}, 1)}",
reduce = "function(id, counts){return Array.sum(counts)}"
)
# Same as:
data.frame(with(diamonds, table(cut, color)))
# Stream jsonlines into a connection
tmp <- tempfile()
m$export(file(tmp))
# Stream it back in R
library(jsonlite)
mydata <- stream_in(file(tmp))
# Or into mongo
m2 <- mongo("diamonds2")
m2$count()
m2$import(file(tmp))
m2$count()
# Remove the collection
m$drop()
m2$drop()
# Insert some data
data(flights, package = "nycflights13")
m <- mongo(collection = "nycflights")
m$insert(flights)
# Basic queries
m$count('{"month":1, "day":1}')
jan1 <- m$find('{"month":1, "day":1}')
m
mm <- m$find(fields={'Premium','price'})
mm <- m$find(fields={'Premium': 'price'})
mm <- m$find(fields={'cut' , 'price'})
mm <- m$find(fields={'cut':"premium" })
mm <- m$find(fields={'cut':"premium"})
head(m)
head(m$find)
m <- mongo(collection = "diamonds")
head(m$find)
head(m$find())
m <- mongo(collection = "diamonds")
head(m$find())
m$find()
m
m <- mongo(collection = "diamonds")
# Insert test data
data(diamonds, package="ggplot2")
m$insert(diamonds)
head(m$find())
m$count()
a <- matrix(1,"good",E,v10,60,50, 334, 4,3,4)
a <- matrix(c(1,"good",E,v10,60,50, 334, 4,3,4),nrow=1)
a <- matrix(c(1,"good","E","v10",60,50, 334, 4,3,4),nrow=1)
a
colnames(a) <- colnames(m$find())
m$insert(a)
m$insert(data.frame(a))
m$count()
m$find()[53941,]
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
new_row
m
head(m)
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection="posts", db=db, url = url)$find()
data1
data1$insert(data1)
mongo(collection="posts", db=db, url = url)$insert(data1)
mongo(collection="posts", db=db, url = url)$find()
new_row <- data1[1,] %>% matrix(nrow=1) %>% data.frame()
colnames(new_row) <- colnames(data1)
mongo(collection="posts", db=db, url = url)$insert(new_row)
mongo(collection="posts", db=db, url = url)$find()
shiny::runApp('Documents/shiny/AppRumen')
new_row
mongo(collection="posts", db=db, url = url)$find()
new_row <- data1[1,]
mongo(collection="posts", db=db, url = url)$insert(new_row)
new_row <- data1[1,] %>% matrix(nrow=1) %>% data.frame()
colnames(new_row) <- colnames(data1)
new_row2 <- data1[1,]
View(new_row)
View(new_row2)
View(new_row)
new_row$average_interest
new_row2$average_interest
new_row2$post_category
new_row$post_category
new_row <- data1[1,] %>% matrix(nrow=1) %>% data.frame()
new_row
new_row <- data1[1,] %>% matrix(nrow=1) %>% data.frame()
colnames(new_row) <- colnames(data1)
new_row
new_row <- data1[1,] %>% matrix(nrow=1) %>% data.frame()
colnames(new_row) <- colnames(data1) %>% data.frame()
new_row <- data1[1,] %>% matrix(nrow=1)
colnames(new_row) <- colnames(data1) %>% data.frame()
new_row <- data1[1,] %>% matrix(nrow=1)
colnames(new_row) <- colnames(data1) %>% data.frame()
new_row %>% data.frame()
View(new_row2)
View(new_row2)
new_row <- data1[1,] %>% matrix(nrow=1)
colnames(new_row) <- colnames(data1)
new_row %>% data.frame()
View(new_row2)
View(new_row2)
new_row <- data1[1,] %>% matrix(nrow=1)
colnames(new_row) <- colnames(data1)
data.frame(lapply(new_row, function(x) t(data.frame(x))))
View(new_row)
View(new_row)
View(new_row2)
new_row <- data1[1,] %>% list()
data.frame(lapply(new_row, function(x) t(data.frame(x))))
new_row <-data.frame(lapply(new_row, function(x) t(data.frame(x))))
new_row <- data1[1,] %>% matrix(nrow=1) %>% as.data.frame()
colnames(new_row) <- colnames(data1)
new_row <- data1[1,] %>% as.data.frame()
colnames(new_row) <- colnames(data1)
new_row <- c(data1[1,]) %>% as.data.frame()
new_row <- c(data1[1,])
new_row
new_row <- data1[1,] %>% matrix(nrow=1) %>% c() %>% as.data.frame()
View(new_row)
new_row <- data1[1,] %>% matrix(nrow=1) %>% c() %>% as.data.frame()
colnames(new_row) <- colnames(data1)
shiny::runApp('Documents/shiny/AppRumen')
Q
new_row <- data1[1,] %>% matrix(nrow=1)
new_row <- data1[1,] %>% matrix(nrow=1) %>% c()
new_row <- data1[1,] %>% matrix(nrow=1) %>% c() %>% as.data.frame()
colnames(new_row) <- colnames(data1)
shiny::runApp('Documents/shiny/AppRumen')
new_row
new_row <- post_data() %>% matrix(nrow = 1) %>% c() %>% data.frame()
new_row <- post_data() %>% matrix(nrow = 1) %>% c()
new_row
post_data()
post_data() %>% data.frame()
c(post_data()) %>% data.frame()
unlist(post_data()) %>% data.frame()
post_data() %>% data.frame()
unlist(post_data()) %>% data.frame() %>% t()
a <- unlist(post_data()) %>% data.frame() %>% t()
a
cbind(post_data()) %>% data.frame()
rbind(post_data()) %>% data.frame()
new_row <- data1[1,] %>% rbind() %>% as.data.frame()
colnames(new_row) <- colnames(data1)
shiny::runApp('Documents/shiny/AppRumen')
new_row
shiny::runApp('Documents/shiny/AppRumen')
Q
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
new_row
input$timestamp_comment
input$average_interest
new_row
input$timestamp
input$timestamp_comment
updateTextInput(session, "timestamp_comment", value = get_time_human())
input$timestamp_comment
get_time_human()
Q
shiny::runApp('Documents/shiny/AppRumen')
input$timestamp_comment
updateTextInput(session, "timestamp_comment", value = get_time_human())
input$timestamp_comment
input$timestamp
updateTextInput(session, "timestamp", value = get_time_human())
input$timestamp
input$average_interest
updateTextInput(session,"average_interest", value="NA")
input$average_interest
updateTextInput(session,"average_interest", value="abc")
input$average_interest
updateTextInput(session, "timestamp", value = get_time_human())
input$timestamp
input$timestamp_comment
shiny::runApp('Documents/shiny/AppRumen')
View(view_posts)
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
mongo(collection="comments", db=db, url = url)$find(field_postID)
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection="posts", db=db, url = url)$find()
data1 <- mongo(collection="posts", db=db, url = url)
data1$update('{"postID":1445138342}', update='{"$set":{ "current_views": 6 }}' )
data1$find('{"postID":1445138342}')
shiny::runApp('Documents/shiny/AppRumen')
host <- "ds061954.mongolab.com:61954"
username <- "user1"
password <- "user1"
db <- "app_rumen"
## Connect to mongodb from a mongolab location
url <- paste0("mongodb://",username,":",password,"@", host, "/",db)
data1 <- mongo(collection="posts", db=db, url = url)$find()
data0 <- mongo(db=db, url = url)
data0
data0$find()
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
filter_category
input$filterCategory
filter_category <- paste0('{"post_category":', ["Milk", "Forage", "Labor",  "Social"],'}')
filter_category <- paste0('{"post_category":', '["Milk", "Forage", "Labor",  "Social"]','}')
filter_category <- paste0('{"post_category":', ["Milk", "Forage", "Labor",  "Social"],'}')
filter_category
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{$or: [{"post_category":',"Milk",'}, {"post_category":', "Forage",'}]' ,'}')
filter_category
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{"post_category":',"Milk",'}')
table_posts_copy <-  mongo_posts$find(filter_category)
mongo_post$find()
mongo_posts$find()
filter_category <- paste0('{"post_category":','"',"Milk",'"','}')
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{$or: [{"post_category":','"',"Milk",'"',
'}, {"post_category":', '"',"Forage",'"','}]' ,'}')
filter_category
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{"post_category":','"',"Milk",'"','}')
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category
filter_category <- paste0('{ $or: [ {"post_category":','"',"Milk",'"',
'}, {"post_category":', '"',"Forage",'"','} ] ' ,'}')
table_posts_copy <-  mongo_posts$find(filter_category)
mongo_posts$index(add = "post_category")
table_posts_copy <-  mongo_posts$find(filter_category)
mongo_posts$index(add = "post_category_index")
mongo_posts$index(add = "post_category":1)
mongo_posts$index("post_category":1)
mongo_posts$index('{"post_category":1}')
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{ $or: [ {"post_category":','"',"Milk",'"',
'}, {"post_category":', '"',"Forage",'"','} ] ' ,'}')
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{ $or: [ {"post_category":','"',"Milk",'"','} ] ' ,'}')
filter_category
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{ "$or"',': [ {"post_category":','"',"Milk",'"','} ] ' ,'}')
table_posts_copy <-  mongo_posts$find(filter_category)
filter_category <- paste0('{ "$or":','[ {"post_category":','"',"Milk",'"',
'}, {"post_category":', '"',"Forage",'"','} ] ' ,'}')
table_posts_copy <-  mongo_posts$find(filter_category)
length(input$filterCategory)
filter_category <- paste0('{ "$or":[')
for (i in 1:length(input$filterCategory)) {
if (i>1 & i<length(input$filterCategory)) {
filter_category <-  paste0(filter_category,',')
}
filter_category <-  paste0(filter_category, '{"post_category":','"',input$filterCategory[i],'"}')
}
filter_category <-  paste0(filter_category, ']}')
filter_category
rv$filter_category <- paste0('{ "$or":[')
for (i in 1:length(input$filterCategory)) {
if (i>1 & i<length(input$filterCategory)) {
rv$filter_category <-  paste0(rv$filter_category,',')
}
rv$filter_category <-  paste0(rv$filter_category, '{"post_category":','"',input$filterCategory[i],'"}')
}
rv$filter_category <-  paste0(rv$filter_category, ']}')
filter_category
rv$filter_category
shiny::runApp('Documents/shiny/AppRumen')
rv$filter_category
rv$filter_category
rv$filter_category
shiny::runApp('Documents/shiny/AppRumen')
filter_category
filter_category
filter_category <-  paste0(filter_category, ']}')
filter_category
filter_category <- paste0('{ "$or":[')
for (i in 1:length(input$filterCategory)) {
if (i>1 & i<length(input$filterCategory)) {
filter_category <-  paste0(filter_category,',')
}
filter_category <-  paste0(filter_category, '{"post_category":','"',input$filterCategory[i],'"}')
}
filter_category <-  paste0(filter_category, ']}')
filter_category
Q
shiny::runApp('Documents/shiny/AppRumen')
shiny::runApp('Documents/shiny/AppRumen')
update_comments
field_postID
mongo_posts$find(field_postID)
mongo_posts$find(field_postID)
mongo_posts$find(field_postID)
mongo_posts$find(field_postID)
mongo_posts$update(field_postID
)
mongo_posts$update(field_postID)
mongo_posts$find(field_postID)
rv$back_to_selected_post
rv$comment_reset

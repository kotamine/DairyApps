strsplit("A, B", ", ")[[1]]
runApp()
strsplit(NULL, ",")
runApp()
strsplit(NULL, ",")
ifelse(is.null(tmp_user$interests), NULL, strsplit(tmp_user$interests,
", ")[[1]])
str_interests
input$interests[i]
input$interests
input$interests[1]
runApp()
?setNames
?state.name
state.name
state.name-"Minnesota"
state.name[-state.name=="Minnesota"]
state.name[-c(state.name=="Minnesota")]
(state.name=="Minnesota")
state.name[state.name!="Minnesota"]
c("Minnesota",state.name[state.name!="Minnesota"], "Other")
runApp()
runApp('~/Documents/shiny/Robot')
runGitHub("Robot", "kotamine")
runGitHub("shiny/tree/master/Robot", "kotamine")
runGitHub("tree/master/Robot", "kotamine/shiny")
runGitHub("Robot", "kotamine/shiny")
runGitHub("shiny/Robot", "kotamine")
runGitHub("shiny", "kotamine",subdir="Robot")
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
shiny::runApp()
runApp()
runApp()
runApp()
filter_postID
filter_userID
Q
runApp()
filter_userID
filter_userID
filter_postID
mongo_posts$find("{ \"postID\": { \"$in\": [",
filter_postID, "]}}")
mongo_posts$find("{\"postID\": { \"$in\": [",
filter_postID, "]}}")
mongo_posts$find("{\"postID\": [",
filter_postID, "]}")
mongo_posts$find("{\"postID\": ",
filter_postID, "}")
mongo_posts$find("{\"postID\": '", filter_postID, "'}")
mongo_posts$find(paste0("{\"postID\": '", filter_postID, "'}"))
mongo_posts$find(paste0("{\"postID\": ", filter_postID, "}"))
mongo_posts$find(paste0('{ $or: [ {"postID": { "$in": [', filter_postID,']}},',
'{"email_address": { "$in": [', filter_userID,']}} ]}'))
mongo_posts$find(paste0('{ $or: ["{\"postID\": '", filter_postID, "'}", "{\"postID\": '", filter_postID, "'}]}"))
mongo_posts$find(paste0('{ $or: ["{\"postID\":", filter_postID, "}", "{\"postID\":", filter_postID, "}]}"))
)
}
]
]a
ff
../
ssf
ssf=
==
//
EQ
C
C
1
`
1
2
2
}}
[]
ad
shiny::runApp()
runApp()
runApp()
rv$selected_post
mong_posts$find()
mongo_posts$find()
mongo_posts$find('{"postID":1445138343 }')
mongo_posts$find()$postID
mongo_posts$find('{"postID":[1445138343 ,1449424681 ]}')
mongo_posts$find('{"postID": {"$in" [1445138343 ,1449424681 ]} }')
mongo_posts$find('{"postID": {"$in": [1445138343 ,1449424681 ] } }')
com_list <- c()
if (!is.null(N_comments)) {
for (i in 1:N_comments) {
com_list <- paste0(com_list, active_comments$commentID[i],", ")
}
}
com_list
active_comments$commentID
N_comments
runApp()
rv$active_comments
rv$selected_comments[rv$selected_comments$comment_status=="Active",]
rv$selected_comments
rv$selected_post$postID
mongo_comments$find(paste0('{"postID":',  1449425394,'}'))
mongo_comments$find()
runApp()
sorted_table_posts$post_name
rv$selected_post
runApp()
rv$selected_post
sorted_table_posts$post_name
post_IDs
sorted_table_posts$postID
post_IDs
runApp()
runApp()
post_IDs
post_IDs
runApp()
field_postID
sorted_table_posts$postID
post_IDs
field_postID
i
tmp_post
runApp()
runApp()
runApp()
fields_post
field_postID
runApp()
runApp()
Q
runApp()
com_list
mongo_comments$update(field_commentID, paste0("{\"commentID\": {\"$in\": [", com_list, "]}}"))
mongo_comments$update(field_commentID, paste0("{\"commentID\": {\"$in\": [", 1445138348, 1445138349 "]}}"))
mongo_comments$update(field_commentID, paste0("{\"commentID\": {\"$in\": [", 1445138348, 1445138349 ]}}"))
mongo_comments$update(field_commentID, paste0("{\"commentID\": {\"$in\": [", 1445138348, 1445138349 ,"]}}"))
mongo_comments$update(field_commentID, paste0("{\"commentID\": {\"$in\": [", "1445138348, 1445138349" ,"]}}"))
mongo_comments$update(field_commentID, paste0("{\"commentID\": {\"$in\": [", \"1445138348, 1445138349\", \"]}}\"))
paste0("{\"commentID\": {\"$in\": [", \"1445138348, 1445138349\", \"]}}\")
paste0("{\"commentID\": {\"$in\": [", "1445138348, 1445138349", "]}}")
mongo_comments$update(field_commentID,  paste0("{\"commentID\": {\"$in\": [", "1445138348, 1445138349", "]}}"))
mongo_comments$update(field_commentID,  "{\"commentID\": {\"$in\": [1445138348, 1445138349]}}")
mongo_comments$find("{\"commentID\": {\"$in\": [1445138348, 1445138349]}}")
mongo_comments$find( paste0("{\"commentID\": {\"$in\": [", "1445138348, 1445138349", "]}}"))
Q
runApp()
field_commentID
mongo_comments$update(field_commentID, update_status)
Q
runApp()
runApp()
Q
runApp()
table_users_copy
tmp_sort
sorted_table_users$email_address
runApp()
table_users_copy[rev(order(tmp_sort)),]
tmp_sort)
tmp_sort
table_users_copy
input$sortPeople
Q
runApp()
runApp()
runApp()
posts
posts$post_name
list_post_links(posts$post_name, "user_post")
runApp()
Q
runApp()
length(post_names)
post_names
post_IDs
runApp()
rv$selected_user
rv$selected_user
runApp()
runApp()
user_IDs
link_id
i
post_IDs[i]
post_IDs
post_IDs
i
rv$selected_post
rv$selected_post
runApp()
Q
runApp()
new_row
row_inputs(fields_post)
fields_post
runApp()
Q
runApp()
runApp()
runApp()
new_row
Q
runApp()
list1
list1 %>% unlist
runApp()
active_comments
shiny::runApp('~/Downloads/Robot')
shiny::runApp('~/Downloads/Robot')
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/shiny/Robot')
shiny::runApp()
shiny::runApp()
shiny::runApp()
mongo_messages$find()
shiny::runApp()
selected
messageID
message_seq
mongo_messages$find()[1,]
messageID
mongo_messages$find(messageID)
tbl$post_link
tbl$post_link
shiny::runApp()
tbl$post_link
mongo_comments$find()
mongo_comments$remove('{"post_name": ""}',multiple=TRUE)
mongo_comments$find()
mongo_comments$find()
list1
row_inputs(fields_comment, list1)
mongo_comments$remove('{"post_name": ""}',multiple=TRUE)
shiny::runApp()
mongo_messages$find()
mongo_messages$update('{}','{"$set":{"viewed_by_receiver":0}}')
mongo_messages$find()
mongo_messages$update('{}','{"$set":{"viewed_by_receiver":0}}',multiple=TRUE)
mongo_messages$find()
1 %in% c(1,2,3)
shiny::runApp()
Q
shiny::runApp()
tbl
dim(tbl)[1]
msgs <- apply(tbl, 1, function(row) {
messageItem(from = row$sender_name, message = paste0(strtrim(row$content,15),".."))
})
msgs <- lapply(tbl, function(row) {
messageItem(from = row$sender_name, message = paste0(strtrim(row$content,15),".."))
}) %>% data.frame()
msgs <- lapply(1:3, function(row) {
messageItem(from = tbl[row,]$sender_name, message = paste0(strtrim(tbl[row,]$content,15),".."))
}) %>% data.frame()
lapply(1:3, function(row) {
messageItem(from = tbl[row,]$sender_name, message = paste0(strtrim(tbl[row,]$content,15),".."))})
lapply(1:3, function(row) {
messageItem(from = tbl[row,]$sender_name, message = paste0(strtrim(tbl[row,]$content,15),".."))}) %>% data.frame
lapply(1:3, function(row) {
messageItem(from = tbl[row,]$sender_name, message = paste0(strtrim(tbl[row,]$content,15),".."))}) %>% data.frame(stringsAsFactors = stringsAsFactors)
lapply(1:3, function(row) {
messageItem(from = tbl[row,]$sender_name, message = paste0(strtrim(tbl[row,]$content,15),".."))}) %>% data.frame(stringsAsFactors = TRUE)
shiny::runApp()
msgs
mongo_users$find()
mongo_users$find() %>% colnames()
user_fields <- c(
"timestamp", "email_address", "user_name", "profession", "interests", "location",
"last_logged_in", "profile_views","about", "linked_in", "n_followed_posts", "n_followers"
)
user_fields
lapply(user_fields, function(var) var=NA)
tmp_row <- lapply(user_fields, function(var) NA)
colnames(tmp_row) <- user_fields
tmp_row <- lapply(user_fields, function(var) NA) %>% data.frame()
colnames(tmp_row) <- user_fields
tmp_row
mongo_users$update('{}','{"$set":{"n_log_in":0}}',multiple=TRUE)
mongo_users$find() %>% colnames()
new_row <- lapply(user_fields, function(var) NA) %>% data.frame()
colnames(new_row) <- user_fields
new_row$timestamp <- get_time_human()
new_row$email_address <- rv$email_address
new_row$user_name <- rv$user_name
new_row$last_logged_in <- as.integer(get_time_epoch())
new_row$profile_views <- 0
new_row$n_followed_posts <- 0
new_row$n_followers <- 0
new_row$n_log_in <- 0
new_row[is.na(new_row)] <- NULL
is.na(new_row)
new_row[is.na(new_row)]
new_row[is.na(new_row)] <- NULL
new_row[is.na(new_row)] <- NA
shiny::runApp()
mongo_users$find()
rbind(c(1,2,3),rep(0,0))
shiny::runApp()
nrow(NULL)
nrow(NULL)>0
nrow(NULL)>0==TRUE
(nrow(NULL)>0)==TRUE
shiny::runApp()
shiny::runApp()
rbind(new_row, rep(0, (length(colnames1) - length(new_row))))
rbind(new_row, matrix(rep(0, (length(colnames1) - length(new_row))),nrow=1))
length(colnames1) - length(new_row)
length(colnames1) - ncol(new_row)
rep(0,(length(colnames1) - ncol(new_row)))
shiny::runApp()
rv$selected_user
!is.null(rv$selected_user)
nrow(rv$selected_user)
new_row
shiny::runApp()
rv$selected_user
shiny::runApp()
user_IDs
i
mongo_users$find(field_postID)
field_postID
mongo_users$find()
mongo_users$find("{\"email_address\":\"kota@umd.edu\"}")
mongo_users$find("{\"email_address\":\"kota@umn.edu\"}")
mongo_posts$find()$email_address
mongo_posts$update('{"email_address":"kota@umd.edu"}', '{"$set":{"email_address":"kota@umn.edu"}',multiple=TRUE)
mongo_posts$update('{"email_address":"kota@umd.edu"}', '{"$set":{"email_address":"kota@umn.edu"}}',multiple=TRUE)
mongo_posts$find()$email_address
mongo_users$find(field_postID)
rv$selected_user
r\
rv$selected_user
rv$selected_user
Q
shiny::runApp()
length(rv$selected_user)
nrow(rv$selected_user)
shiny::runApp()
Q
shiny::runApp()
rep(0, (length(colnames1) - ncol(new_row)))
length(colnames1) - ncol(new_row)
rep(0,length(colnames1) - ncol(new_row))
rep(0,(length(colnames1) - ncol(new_row)))
rep(0,0)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
mongo_messages$find() %>% colnames()
shiny::runApp()
data.frame(message_id = user_session$message$message_id,
timestamp = get_time_human(), sender_email_address = rv$email_address,
sender_name = rv$user_name, receiver_email_address = rv$selected_user$email_address,
receiver_name = rv$selected_user$user_name, viewed_by_receiver = 0,
content = input$msg_content, title = input$msg_title)
data.frame(message_id = user_session$message$message_id,
timestamp = get_time_human())
user_session$message$message_id
as.integer(get_time_epoch())
data.frame(message_id=as.integer(get_time_epoch()),
timestamp=get_time_human())
shiny::runApp()
shiny::runApp('~/Documents/shiny/Robot')
common_variables_min_step$min
input[[c(list_inputs_shared,
list_inputs_feed)]]
input %>% unlist()
list_inputs_shared
input[["herd_size"]]
input[[c("herd_size","milk_cow_day")]]
sapply(c("herd_size","milk_cow_day"), function(x) input[[x]])
lapply(c("herd_size","milk_cow_day"), function(x) input[[x]]) %>% unlist()
any(common_variables_min_step$min >
lapply(c(list_inputs_shared, list_inputs_feed), function(x) input[[x]]) %>% unlist())
common_variables_min_step$min >
lapply(c(list_inputs_shared, list_inputs_feed), function(x) input[[x]]) %>% unlist()
common_variables_min_step$min
lapply(c(list_inputs_shared, list_inputs_feed), function(x) input[[x]]) %>% unlist()
c(1,2,3) > c(1,2,3)
c(1,2,3) > c(2,2,3)
c(1,2,3) > c(2,1,3)
any(profile_specific_variables_min_step$min >
lapply(c(list_inputs_profile), function(x) input[[x]]) %>% unlist())
profile_specific_variables_min_step$min
lapply(c(list_inputs_profile), function(x) input[[x]]) %>% unlist())
lapply(c(list_inputs_profile), function(x) input[[x]]) %>% unlist()
lapply(c(list_inputs_profile), function(x) input[[x]]) %>% unlist()
lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]]) %>% unlist()
any(profile_specific_variables_min_step$min >
lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]]) %>% unlist())
profile_specific_variables_min_step$min >  lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]]) %>% unlist()
profile_specific_variables_min_step$min
lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]]) %>% unlist()
lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]])
lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]])[1:9] %>% unlist()
profile_specific_variables_min_step$min[1:9] > lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]])[1:9] %>% unlist()
profile_specific_variables_min_step$min[1:9]
profile_specific_variables_min_step$min[1:9] %>% as.numaric()
profile_specific_variables_min_step$min[1:9] %>% as.numeric()
profile_specific_variables_min_step$min[1:9] %>% as.numeric() > lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]])[1:9] %>% unlist()
(profile_specific_variables_min_step$min[1:9] %>% as.numeric() > lapply(c(list_inputs_profile), function(x) input[[paste0(x,"Robots")]])[1:9] %>% unlist() ) %>% any()
profile_specific_variables_min_step %>% head()
profile_specific_variables_min_step$variable=="dep_method"
profile_specific_variables_min_step$variable=="n_sets"
profile_specific_variables_min_step$variable=="n_sets" %>% which()
(profile_specific_variables_min_step$variable=="n_sets") %>% which()
default_common_case_1$label
default_common_case_1$label[1:length(list_inputs_shared)]
default_common_case_1$label[1:18]
default_common_case_1$label[(length(list_inputs_shared)+1):length(default_common_case_1$label)]
label_inputs_feed
label_inputs_profile
default_profile_specific_case_1$label
is.null(NULL)
is.null(NA)
is.character("NA")
is.character(NULL)
lapply(c(1:3), print)
runApp()
runApp('~/Documents/shiny/Robot')
ans$min_invalid
ans$min_invalid_items
ans$max_invalid
ans$num_invalid
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
vars
vars
numeric_vars_min
numeric_vars_max
numeric_vars_max %>% is.numeric()
runApp('~/Documents/shiny/Robot')
ans$min_invalid
ans$max_invalid
ans$num_invalid
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
is.character(NULL)
runApp('~/Documents/shiny/Robot')
any(c(is.character(vars), is.null(vars)))
(ans$num_invalid)
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
input$herd_size
input$herd_size %>% is.na()
runApp('~/Documents/shiny/Robot')
is.null(vars)
is.na(vars)
is.character(vars)
input$herd_size
runApp('~/Documents/shiny/Robot')
runApp()
Q
runApp('~/Documents/shiny/Robot')
input$dashboard
input$dashboard
runApp('~/Documents/shiny/Robot')
input$cost_robotRetrofit
input$cost_robotNew
0 > 0
input$dashboard
input$dashboard
ans$min_invalid
ans$min_invalid_items
numeric_vars_min >
vars
numeric_vars_min[31]
vars[31]
runApp()
runApp()
runApp('~/Documents/shiny/Robot')
TRUE & FALSE
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
Q
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
ans$invalidRetrofit
ans$invalidNew
ans$invalidRobots
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp()
runApp()
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
runApp('~/Documents/shiny/Robot')
shinyapps::setAccountInfo(name='kotamine', token='0061EC6D709A8BC8BC2AAD86CC927BD4', secret='Up6irQzFOBlWlBCbDJ+IIaYvg8vr/mBxOAfEY8FO')
library(shinyapps)
setwd("/Documents/shiny/Robot")
setwd("~/Documents/shiny/Robot")
deployApp()
runApp()
deployApp()

# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
vv <- 0
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- vv
}
# print details of v
.Internal(inspect(v))
}
v
}
computeSquares(5,TRUE)
computeSquares <- function(n,messUpVisibility) {
# pre-allocate v
# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
vv <- 0
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- vv
v
}
# print details of v
.Internal(inspect(v))
}
v
}
computeSquares(5,TRUE)
computeSquares <- function(n,messUpVisibility) {
# pre-allocate v
# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
vv <- 0
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- vv
vLast2 <- v
}
# print details of v
.Internal(inspect(v))
}
v
}
computeSquares(5,TRUE)
=======
shiny::runApp()
refProfileName(base_profles[1])
base_profiles <- c("Robots","Retrofit","New")
combo_profiles <- c("RetrofitRobots","RetrofitNew")
refProfileName(base_profles[1])
refProfileName(base_profiles[1])
refProfileName(base_profiles[2])
refProfileName(base_profiles[3])
shiny::runApp()
df
input$inflation_margin
project_inflation(n_year, ans[[x]]$inc_rev_total, input$inflation_margin/100)
project_inflation(n_year, ans[[x]]$inc_rev_total, input$inflation_margin/100) %>% unlist()
shiny::runApp()
df
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Q
lapply(base_profiles, function(x) {x <- list()} )
base_profiles <- c("Robots","Retrofit","New")
lapply(base_profiles, function(x) {x <- list()} )
runApp()
runApp()
runApp()
x
x
x
runApp()
runApp()
runApp()
test1_val
c(test1_val)
Q
>>>>>>> Stashed changes
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
source('~/Documents/shiny/Robot/ui_files/ui_sensitivity.R')
source('~/Documents/shiny/Robot/ui_files/ui_data_entry_tabs.R')
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
shiny::runApp()
shiny::runApp()
source('~/Documents/shiny/Robot/ui_files/ui_data_entry_tabs.R')
shiny::runApp()
base_profiles <- c("Robots","Retrofit","New")
base_profiles_se <- c(outer(base_profiles, paste0("_se",c(1:5)),FUN=paste,sep=""))
base_profiles_se
shiny::runApp()
shiny::runApp('~/Dropbox/Shiny/test1')
shiny::runApp('~/Dropbox/Shiny/test_shinyTable')
shiny::runApp('~/Documents/shiny/scratch_paper')
shiny::runApp()
shiny::runApp('~/Documents/shiny/scratch_paper')
shiny::runApp()
X
ans[["Robots_se1"]][["table_cash_flow"]]$after_tax_cash_flow
ans[["Robots_se2"]][["table_cash_flow"]]$after_tax_cash_flow
ans[["Robots_se2"]][["table_cash_flow"]]$after_tax_cash_flow
df
x
refProfileName(x)
sd
df
tax_status
refProfileName(x)
df
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
tbl
x
refProfileName(x)
sum[["table_after_tax"]]()
gsub(" ",".","Retrofit Parlors")
shiny::runApp()
tbl
tbl
gsub(" ", ".", refProfileName(x))
tbl <- data.frame(
varnames=c("Milk Income","Feed Cost"),
Robot=c(200,
150,
Current=c(180,
130)  %>% round
)
tbl
tbl <- data.frame(
varnames=c("Milk Income","Feed Cost"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
)
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
shiny::runApp()
tbl <- data.frame(
varnames=c("Milk \n Income","Feed \n Cost"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk \n Income","Feed \n Cost"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk Income","Feed Cost"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
shiny::runApp()
tbl <- data.frame(
varnames=c("Milk","Feed"),
color1=c("green","orange"),
color2=c("blue","yellow"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
names(data)<-c("varnames","Robot.style","Current.style")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[3:4],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk","Feed"),
color1=c("green","orange"),
color2=c("blue","yellow"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
names(data)<-c("varnames","Robot.style","Current.style","Robot","Current")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[4:5],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
library(googleVis)
tbl <- data.frame(
varnames=c("Milk","Feed"),
color1=c("green","orange"),
color2=c("blue","yellow"),
Robot=c(200,
150) %>% round,
Current=c(180,
130)  %>% round
)
names(data)<-c("varnames","Robot.style","Current.style","Robot","Current")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[4:5],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
names(tbl)<-c("varnames","Robot.style","Current.style","Robot","Current")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[4:5],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
tbl
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[2:5],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[4,2],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[c(4,2)],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[c(4,2,5,3)],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,
150) %>% round,
color1=c("green","orange"),
Current=c(180,
130)  %>% round,
color2=c("blue","yellow")
)
names(tbl)<-c("varnames","Robot","Robot.style","Current.style","Current")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
names(tbl)<-c("varnames","Robot","Robot.style","Current","Current.style")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="top")
) %>% plot()
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1],
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="none")
) %>% plot()
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1] #,
#              options=list( #title="Net Annual Impact ($)",
#                # titleTextStyle="{fontSize:16}",
#                legend="none")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,
150) %>% round,
color1=rep("#2B60DE",2),
Current=c(180,
130)  %>% round,
color2=rep("#2B60DE",2)
)
names(tbl)<-c("varnames","Robot","Robot.style","Current","Current.style")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1] #,
#              options=list( #title="Net Annual Impact ($)",
#                # titleTextStyle="{fontSize:16}",
#                legend="none")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,
150) %>% round,
color1=rep("#2B60DE",2),
Current=c(180,
130)  %>% round,
color2=rep("#679CFF",2)
)
names(tbl)<-c("varnames","Robot","Robot.style","Current","Current.style")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1] #,
#              options=list( #title="Net Annual Impact ($)",
#                # titleTextStyle="{fontSize:16}",
#                legend="none")
) %>% plot()
tbl <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,
150) %>% round,
color1=rep("#2B60DE",2),
Current=c(180,
130)  %>% round,
color2=rep("#99CEFF",2)
)
names(tbl)<-c("varnames","Robot","Robot.style","Current","Current.style")
gvisBarChart(tbl, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1] #,
#              options=list( #title="Net Annual Impact ($)",
#                # titleTextStyle="{fontSize:16}",
#                legend="none")
) %>% plot()
shiny::runApp()
shiny::runApp()
tbl2 <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,150,80, 100) %>% round,
color1=rep("#2B60DE",4)
)
names(tbl2)<-c("varnames","Robot","Robot.style")
gvisBarChart(tbl2, xvar=colnames(tbl)[1],
yvar=colnames(tbl)[-1] #,
#              options=list( #title="Net Annual Impact ($)",
#                # titleTextStyle="{fontSize:16}",
#                legend="none")
) %>% plot()
tbl2 <- data.frame(
varnames=c("Milk","Feed"),
Robot=c(200,150,80, 100) %>% round,
color1=rep("#2B60DE",4)
)
names(tbl2)<-c("varnames","Robot","Robot.style")
gvisBarChart(tbl2, xvar=colnames(tbl2)[1],
yvar=colnames(tbl2)[-1] #,
#              options=list( #title="Net Annual Impact ($)",
#                # titleTextStyle="{fontSize:16}",
#                legend="none")
) %>% plot()
gvisBarChart(tbl2, xvar=colnames(tbl2)[1],
yvar=colnames(tbl2)[-1] #,
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="none")
) %>% plot()
gvisBarChart(tbl2, xvar=colnames(tbl2)[1],
yvar=colnames(tbl2)[-1] #,
options=list( #title="Net Annual Impact ($)",
# titleTextStyle="{fontSize:16}",
legend="none")
) %>% plot()
gvisBarChart(tbl2, xvar=colnames(tbl2)[1],
yvar=colnames(tbl2)[-1] #,
options=list(
legend="none")
) %>% plot()
gvisBarChart(tbl2, xvar=colnames(tbl2)[1],
yvar=colnames(tbl2)[-1], #,
options=list(
legend="none")
) %>% plot()
shiny::runApp()
tbl
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
c(c(-5:-1)*10,c(1:5)*10)
c(c(-10:-1)*5,c(1:10)*5)
c(c(-5:-1)*10,c(1:5)*10)
c(c(-5:-1)*20,c(1:5)*20)
c(c(-5:-1),c(1:5))*2
seq_along(c(4,5,7))
shiny::runApp()
shiny::runApp()
shiny::runApp()
version
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
is.null(calc_type)
is.na(calc_type)
shiny::runApp()
shiny::runApp()
change_vars
sensitivity_vars
shiny::runApp()
shiny::runApp()

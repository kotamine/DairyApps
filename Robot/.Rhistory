fv(rate, per-1, pmt, pv, type) * rate
}
zeros <- function(r,c) matrix(c(mat.or.vec(r,c)),nrow=r,ncol=c)
ones <- function(r,c) matrix(c(rep(1,r*c)),nrow=r,ncol=c)
nulls <- function(r,c) matrix(c(rep(NA,r*c)),nrow=r,ncol=c)
my_add_row <- function(A,a) {
# A: data.frame
# a: row vector that is going to be appended to A
A <- as.matrix(A)
A <- rbind(A,a)
data.frame(A)
}
formatcomma <- function(x, digits=NULL) {
if (length(x)==0) { return(NA) }
if (is.null(digits)) {
format(x, big.mark=",", scientific=FALSE)
} else {
format(round(x,digits), big.mark=",", scientific=FALSE)
}
}
formatdollar <- function(x,digit=0) {
#if (is.na(x)) { return(NA) }
if (length(x)==0) { return(NA) }
#if (is.null(x)) { return(NA) }
if (x>=0) {
paste0("$",x %>% round(digit) %>% formatcomma())
} else {
paste0("-$",-x %>% round(digit) %>% formatcomma())
}
}
formatdollar2 <- function(x,digit=0) {
if (is.na(x)) { return(NA) }
if (is.null(x)) { return(NA) }
if (x>=0) {
paste0("+$",x %>% round(digit) %>% formatcomma())
} else {
paste0("-$",-x %>% round(digit) %>% formatcomma())
}
}
formatdollar2b <- function(x,digit=0) {
if (is.na(x)) { return(NA) }
if (is.null(x)) { return(NA) }
if (x>=0) {
paste0("( +$",x %>% round(digit) %>% formatcomma()," )")
} else {
paste0("( -$",-x %>% round(digit) %>% formatcomma()," )")
}
}
df_null <- function(colnames) {
dummy <- matrix(rep(NA,length(colnames)),nrow=1)
colnames(dummy) <- colnames
empty_table <- data.frame(Column1 = numeric(0))
empty_table <- rbind(empty_table, dummy)[NULL,]
empty_table
}
## ---- Debt Table ---
# interest rate info
loan_robot_1 <- rv$robot_invest
loan_robot_2 <- rv$robot_invest*(1+input$inflation_robot)^input$robot_year
loan_period_robot <- round(input$robot_year*.8)
loan_housing <- rv$cost_housing
loan_period_housing <- round(rv$housing_year*.8)
tbl_robot <- debt_table(loan_robot_1, interest_rate, loan_period_robot, n_years , 1) +
+ debt_table(loan_robot_2, interest_rate, loan_period_robot, n_years, robot_year+1)
colnames(tbl_robot) <- lapply(colnames(tbl_robot), function(x) { paste0("robot_",x)}) %>% unlist()
tbl_barn <- debt_table(loan_housing, interest_rate, loan_period_housing, n_years, 1)
colnames(tbl_barn) <- lapply(colnames(tbl_barn), function(x) { paste0("barn_",x)}) %>% unlist()
table_debt <- cbind(tbl_robot, tbl_barn[,c(-1)])
table_debt$interest_total <- table_debt$robot_interest + table_debt$barn_interest
table_debt$principal_total <- table_debt$robot_principal + table_debt$barn_principal
cost_robot <- 360000
salvage_robot <- 45000
robot_year_AGDS <- 7
vdb(cost_robot, salvage_robot, robot_year_AGDS, factor=1.5, sequence=TRUE)
n_years <- 50;
c(rep(0,0),c(1:3))
shiny::runApp()
shiny::runApp()
x
x
x
x
x
x
x
x
shiny::runApp()
shiny::runApp()
shiny::runApp()
ans[[x]]$tax_interest
ans[[x]]$interest_at_interest
(pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
a
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking$interest[-1])
)
ans[[x]]$table_debt$milking$interest[-1])
ans[[x]]$table_debt$milking$interest[-1]
ans[[x]]$table_debt$milking$interest
ans[[x]]$table_debt
table_debt$milking_interest
ans[[x]]$table_debt$milking_interest
ans[[x]]$table_depreciation$depreciation_milking_system
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest))
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_principal)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_principal))
input$tax_rate/100 * (pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_depreciation$depreciation_milking_system)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_depreciation$depreciation_housing)))
shiny::runApp()
ans[[x]]$tax_interest
ans[[x]]$interest_at_interest
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest))
ans[[x]]$interest_at_interest
shiny::runApp()
ans[[x]]$tax_interest
ans[[x]]$revenue_minus_expense
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ans[[x]]$revenue_minus_expense
ans[[x]]$depreciation_at_interest
(ans[[x]]$adj_revenue_minus_expense + ans[[x]]$adj_interest)*(1-input$tax_rate/100)
ans[[x]]$adj_revenue_minus_expense
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1])) +
+ pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1]))
ans[[x]]$adj_depr*input$tax_rate/100 + ans[[x]]$adj_principal + ans[[x]]$adj_salvage
ans[[x]]$adj_interest
shiny::runApp()
ans[[x]]$net_annual_impact_before_tax
ans[[x]]$tax_revenue_minus_expense
ans[[x]]$tax_interest + ans[[x]]$tax_depreciation + ans[[x]]$adj_WACC_interest
ans[[x]]$adj_WACC_hurdle
ans[[x]]$pb_net_annual_impact_before_tax
shiny::runApp()
ans[[x]]$table_cash_flow
ans[[x]]$table_debt$milking_interest
ans[[x]]$table_debtans[[x]]
ans[[x]]$table_debtans
ans[[x]]$table_debt
(input[[paste0("n_sets",x)]] == 2)
ans[[x]]$cost_milking2
ans[[x]]$loan_milking2
debt_table(ans[[x]]$loan_milking2, input[[paste0("r_milking1",x)]]/100, input[[paste0("n_yr_milking1",x)]], n_years, input[[paste0("useful_years",x)]]+1) * (ans[[x]]$n_sets <- 2)
n_years <- 30
debt_table(ans[[x]]$loan_milking2, input[[paste0("r_milking1",x)]]/100, input[[paste0("n_yr_milking1",x)]], n_years, input[[paste0("useful_years",x)]]+1) * (ans[[x]]$n_sets <- 2)
debt_table(ans[[x]]$loan_milking2, input[[paste0("r_milking1",x)]]/100, input[[paste0("n_yr_milking1",x)]], n_years, input[[paste0("useful_years",x)]]+1)
shiny::runApp()
ans[[x]]$avg_interest
- pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon, npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1])) +
- (ans[[x]]$pb_positive_total - ans[[x]]$pb_negative_total + ans[[x]]$capital_cost_total)
ans[[x]]$capital_cost_total
ans[[x]]$pb_negative_total
ans[[x]]$pb_positive_total
pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon, npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1]))
ans[[x]]$table_cash_flow
- pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon, npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1]))
(ans[[x]]$pb_positive_total - ans[[x]]$pb_negative_total + ans[[x]]$capital_cost_total)
- pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon, npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1])) +
- (ans[[x]]$pb_positive_total - ans[[x]]$pb_negative_total + ans[[x]]$capital_cost_total)
ans[[x]]$interest_at_interest
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest))
pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest))
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_housing",x)]]/100, ans[[x]]$table_debt$housing_interest))
pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_housing",x)]]/100, ans[[x]]$table_debt$barn_interest))
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_interest)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_housing",x)]]/100, ans[[x]]$table_debt$barn_interest))
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_debt$milking_principal)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_housing",x)]]/100, ans[[x]]$table_debt$barn_principal))
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100,  ans[[x]]$table_cash_flow$downpayment[-1])+
+ ans[[x]]$table_cash_flow$downpayment[1])
ans[[x]]$WACC
-pmt(ans[[x]]$WACC, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC,  ans[[x]]$table_cash_flow$downpayment[-1])+
+ ans[[x]]$table_cash_flow$downpayment[1])
ans[[x]]$table_cash_flow$downpayment[-1]
npv(ans[[x]]$WACC/100,  ans[[x]]$table_cash_flow$downpayment[-1])+
+ ans[[x]]$table_cash_flow$downpayment[1])
npv(ans[[x]]$WACC/100,  ans[[x]]$table_cash_flow$downpayment[-1])+
+ ans[[x]]$table_cash_flow$downpayment[1]
ans[[x]]$loan_housing
input[[paste0("r_housing",x)]]/100
ans[[x]]$loan_milking1
ans[[x]]$cost_housing + ans[[x]]$cost_milking
ans[[x]]$WACC
input[[paste0("down_milking1",x)]]
input[[paste0("down_housing",x)]]
input$tax_rate
((input[[paste0("down_housing",x)]] +input[[paste0("down_milking1",x)]]) * input$hurdle_rate +
+ (ans[[x]]$loan_housing * input[[paste0("r_housing",x)]]/100 + ans[[x]]$loan_milking1 * input[[paste0("r_milking1",x)]])/100*
(1-input$tax_rate/100))/(ans[[x]]$cost_housing + ans[[x]]$cost_milking)
- ((input[[paste0("down_housing",x)]] +input[[paste0("down_milking1",x)]]) * input$hurdle_rate)
((input[[paste0("down_housing",x)]] +input[[paste0("down_milking1",x)]]) * input$hurdle_rate/100 +
+ (ans[[x]]$loan_housing * input[[paste0("r_housing",x)]]/100 + ans[[x]]$loan_milking1 * input[[paste0("r_milking1",x)]])/100*
(1-input$tax_rate/100))/(ans[[x]]$cost_housing + ans[[x]]$cost_milking)
((input[[paste0("down_housing",x)]] +input[[paste0("down_milking1",x)]]) * input$hurdle_rate/100 +
+ (ans[[x]]$loan_housing * input[[paste0("r_housing",x)]]/100 +
+ ans[[x]]$loan_milking1 * input[[paste0("r_milking1",x)]]/100)*
(1-input$tax_rate/100))/(ans[[x]]$cost_housing + ans[[x]]$cost_milking)
ans[[x]]$adj_revenue_minus_expense
ans[[x]]$adj_interest
ans[[x]]$adj_depr
ans[[x]]$adj_principal
ans[[x]]$adj_salvage
ans[[x]]$interest_at_interest
shiny::runApp()
(pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_depreciation$depreciation_milking_system)) +
+ pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_depreciation$depreciation_housing)))
ans[[x]]$table_depreciation
ans[[x]]$cost_milking
ans[[x]]$cost_milking2
input[[paste0("n_robot",x)]] * input[[paste0("cost_robot",x)]]
input[[paste0("cost_robot",x)]]
ans[[x]]$cost_milking2
vdb(ans[[x]]$cost_milking2, 0,  yr_AGDS_milking, factor=1.5, sequence=TRUE)
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_depreciation$depreciation_milking_system))
pmt(input[[paste0("r_housing",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_housing",x)]]/100, ans[[x]]$table_depreciation$depreciation_housing)
)
ans[[x]]$adj_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$interest[-1]))
ans[[x]]$table_cash_flow
ans[[x]]$interest_at_interest
ans[[x]]$table_cash_flow$interest[-1
]
ans[[x]]$adj_salvage
ans[[x]]$adj_principal
ans[[x]]$principal_at_interest
pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$principal[-1]))
ans[[x]]$table_cash_flow
input[[paste0("n_yr_milking1",x)]]
debt_table(ans[[x]]$loan_milking1,input[[paste0("r_milking1",x)]]/100, input[[paste0("n_yr_milking1",x)]], n_years, 1)
ans[[x]]$n_sets
ans[[x]]$loan_milking2
input[[paste0("down_milking2",x)]]
ans[[x]]$cost_milking2
ans[[x]]$cost_milking2
input$inflation_robot/100
ans[[x]]$cost_milking
(input[[paste0("useful_years",x)]] + input[[paste0("yr_system1",x)]])
debt_table(ans[[x]]$loan_milking2, input[[paste0("r_milking1",x)]]/100, input[[paste0("n_yr_milking1",x)]], n_years, input[[paste0("useful_years",x)]]+1)
debt_table(ans[[x]]$loan_housing, input[[paste0("r_housing",x)]]/100, input[[paste0("n_yr_housing",x)]], n_years, 1
)
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$principal[-1]))
ans[[x]]$principal_at_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$principal[-1])) +
_ ans[[x]]$principal_at_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$principal[-1])) +
- ans[[x]]$principal_at_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$principal[-1])) +
+ ans[[x]]$principal_at_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$interest[-1])) +
- ans[[x]]$interest_at_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$interest[-1]))
- ans[[x]]$interest_at_interest
pmt(input[[paste0("r_milking1",x)]]/100, ans[[x]]$planning_horizon,
npv(input[[paste0("r_milking1",x)]]/100, ans[[x]]$table_cash_flow$salvage[-1]))
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$salvage[-1])) +
)
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$salvage[-1]))
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$depreciation[-1]))
ans[[x]]$depreciation_at_interest
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$depreciation[-1])) +
- ans[[x]]$depreciation_at_interest
shiny::runApp()
ans[[x]]$table_cash_flo
- pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon, npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1]))
- (ans[[x]]$pb_positive_total - ans[[x]]$pb_negative_total + ans[[x]]$capital_cost_total)
ans[[x]]$pb_positive_total
ans[[x]]$pb_negative_total
ans[[x]]$capital_cost_total
- pmt(ans[[x]]$avg_interest/100, ans[[x]]$planning_horizon, npv(ans[[x]]$avg_interest/100, ans[[x]]$table_cash_flow$revenue_minus_expense[-1])) +
- (ans[[x]]$pb_positive_total - ans[[x]]$pb_negative_total + ans[[x]]$capital_cost_total)
ans[[x]]$avg_interest/100
ans[[x]]$avg_interest/100
ans[[x]]$avg_interest
shiny::runApp()
ans[[x]]$table_depreciation
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100,  ans[[x]]$table_cash_flow$downpayment[-1])+
+ ans[[x]]$table_cash_flow$downpayment[1])
ans[[x]]$table_cash_flow
+ pmt(input$hurdle_rate/100, ans[[x]]$planning_horizon,
npv(input$hurdle_rate/100, ans[[x]]$table_cash_flow$downpayment[-1])+ans[[x]]$table_cash_flow$downpayment[1])
ans[[x]]$adj_salvage
-pmt(ans[[x]]$WACC/100, ans[[x]]$planning_horizon,
npv(ans[[x]]$WACC/100, ans[[x]]$table_cash_flow$salvage[-1]))
ans[[x]]$WACC/100
ans[[x]]$WACC
((input[[paste0("down_housing",x)]] +input[[paste0("down_milking1",x)]]) * input$hurdle_rate +
+ (ans[[x]]$loan_housing * input[[paste0("r_housing",x)]] +
+ ans[[x]]$loan_milking1 * input[[paste0("r_milking1",x)]])*
(1-input$tax_rate/100))/(ans[[x]]$cost_housing + ans[[x]]$cost_milking)
shiny::runApp()
ans[[x]]$table_depreciation
ans[[x]]$cost_milking2
shiny::runApp()
input[[paste0("milk_change"),"Robots"]]
input[[paste0("milk_change","Robots")]]
input$milk_cow_day
computeSquares <- function(n,messUpVisibility) {
# pre-allocate v
# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- v
}
# print details of v
.Internal(inspect(v))
}
v
}
<<<<<<< Updated upstream
computeSquares(5,FALSE)
computeSquares(5,TRUE)
computeSquares(5,FALSE)
computeSquares(5,TRUE)
computeSquares <- function(n,messUpVisibility) {
# pre-allocate v
# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
vv <- 0
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- vv
}
# print details of v
.Internal(inspect(v))
}
v
}
computeSquares(5,TRUE)
computeSquares <- function(n,messUpVisibility) {
# pre-allocate v
# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
vv <- 0
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- vv
v
}
# print details of v
.Internal(inspect(v))
}
v
}
computeSquares(5,TRUE)
computeSquares <- function(n,messUpVisibility) {
# pre-allocate v
# (doesn't actually help!)
v <- 1:n
if(messUpVisibility) {
vLast <- v
}
vv <- 0
# print details of v
.Internal(inspect(v))
for(i in 1:n) {
v[[i]] <- i^2
if(messUpVisibility) {
vLast <- vv
vLast2 <- v
}
# print details of v
.Internal(inspect(v))
}
v
}
computeSquares(5,TRUE)
=======
shiny::runApp()
refProfileName(base_profles[1])
base_profiles <- c("Robots","Retrofit","New")
combo_profiles <- c("RetrofitRobots","RetrofitNew")
refProfileName(base_profles[1])
refProfileName(base_profiles[1])
refProfileName(base_profiles[2])
refProfileName(base_profiles[3])
shiny::runApp()
df
input$inflation_margin
project_inflation(n_year, ans[[x]]$inc_rev_total, input$inflation_margin/100)
project_inflation(n_year, ans[[x]]$inc_rev_total, input$inflation_margin/100) %>% unlist()
shiny::runApp()
df
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Q
lapply(base_profiles, function(x) {x <- list()} )
base_profiles <- c("Robots","Retrofit","New")
lapply(base_profiles, function(x) {x <- list()} )
runApp()
runApp()
runApp()
x
x
x
runApp()
runApp()
runApp()
test1_val
c(test1_val)
Q
>>>>>>> Stashed changes
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
source('~/Documents/shiny/Robot/ui_files/ui_sensitivity.R')
source('~/Documents/shiny/Robot/ui_files/ui_data_entry_tabs.R')
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
source('~/Documents/shiny/Robot/session_files/session_sensitivity.R')
shiny::runApp()
shiny::runApp()
source('~/Documents/shiny/Robot/ui_files/ui_data_entry_tabs.R')
shiny::runApp()
base_profiles <- c("Robots","Retrofit","New")
base_profiles_se <- c(outer(base_profiles, paste0("_se",c(1:5)),FUN=paste,sep=""))
base_profiles_se
shiny::runApp()
shiny::runApp('~/Dropbox/Shiny/test1')
shiny::runApp('~/Dropbox/Shiny/test_shinyTable')
shiny::runApp('~/Documents/shiny/scratch_paper')
shiny::runApp()
shiny::runApp('~/Documents/shiny/scratch_paper')
